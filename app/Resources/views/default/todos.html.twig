{% extends 'default/base.html.twig' %}

{% block title %}To Dos - Developer's Notebook{% endblock %}

{% block javascripts %}
    {{ parent() }}

    <script type="text/javascript" src="{{ asset('resources/js/folders.js') }}"></script>

    <script type="text/javascript">
        var standardArea = "{{ standardArea }}";

        $(document).ready(function() {
            $('.editor-folder').click(function() {
                $('.tab-section').hide();
                $('.editor-folder').removeClass('selected');

                var dataSection = $(this).attr('data-section');
                $('.'+dataSection).show();
                $(this).addClass('selected');
            });

            $('.editor-folder.all-projects-folders').click(function() {
                selectFolder($(this));
            });

            $('.editor-folder.folder').click(function() {
                selectFolder($(this));
            });

            $('.editor-folder.project').click(function() {
                selectProject($(this));
            });

            $('.all-projects-folders').trigger('click');

            var selectedItem = getUrlParameter("selectedItem");

            if (selectedItem !== undefined) {
                $('.row[data-id="'+selectedItem+'"]').trigger('click');
            }

            setDraggableAndDroppable();

            $('.text-todo-dateplanned').datepicker({
                dateFormat: "yy-mm-dd"
            });
        });

        function createTodo() {
            var folderId = $('.folders').find('.editor-folder.selected').attr('data-id');
            var projectId = $('.projects').find('.editor-folder.selected').attr('data-id');

            if (folderId === undefined || folderId == "") {
                folderId = -1;
            }

            if (projectId === undefined || projectId == "") {
                projectId = -1;
            }

            var toSend = {
                folder: folderId,
                project: projectId,
            }

            $.post("{{ path('todosCreateTodo') }}", toSend, function(data) {
                var html = '<div class="info"><span class="edit-button"><a href="#!" onclick="openEdit(this)">Edit</a></span><span class="name"></span><span class="url gray-info"><a href="" target="_blank"></a></span></div>';
                html += '<div class="edit"><input type="text" class="text-bookmark-name" placeholder="Bookmark Name"><input type="text" class="text-bookmark-url" placeholder="Bookmark URL"><textarea class="text-bookmark-note" placeholder="Bookmark Notes"></textarea><button onclick="saveBookmark()" style="margin-left: 10px;">Save</button><button onclick="closeEdit(this)" style="margin-left: 10px;">Cancel</button></div>';

                var div = $("<div>");
                div.addClass('row');
                div.attr('data-id', data.id);
                div.attr('data-folder', data.folder);
                div.attr('data-project', data.project);
                div.html(html);
                $('#bookmarksTable').prepend(div);

                div.click(function() {
                    selectTodo($(this));
                });

                openEdit(div.find('.edit-button').find('a'));
                div.find('.text-bookmark-name').select();

                setDraggableAndDroppable();
            });
        }

        function saveTodo() {
            var selected = $('.row.selected');

            var toSend = {
                id: selected.attr('data-id'),
                name: selected.find('.text-bookmark-name').val(),
                url: selected.find('.text-bookmark-url').val(),
                notes: selected.find('.text-bookmark-notes').text()
            }

            $.post("{{ path('todosSaveTodo') }}", toSend, function(data) {
                var info = selected.find('.info');
                info.find('.name').text(data.name);
                info.find('.url').find('a').attr('href', data.url);
                info.find('.url').find('a').text(data.croppedUrl);

                closeEdit(selected.find('.edit'));
            });
        }

        function removeTodo() {
            var selected = $('.row.selected');

            if (selected.length) {
                if (confirm('Are you sure you want to remove this bookmark? This action cannot be undone.')) {
                    var toSend = {
                        id: selected.attr('data-id')
                    }

                    $.post("{{ path('todosRemove') }}", toSend, function(data) {
                        var previewSibling = selected.prev();
                        selected.remove();
                        previewSibling.trigger('click');
                    });
                }
            }
            else {
                alert('You must select a to do to delete.');
            }
        }

        function selectTodo(obj) {
            $('.row').removeClass('selected');
            $(obj).addClass('selected');
        }

        function openEdit(obj) {
            var row = $(obj).parents('.row');
            var priority = row.find('.priority').text();

            row.find('.select-priority').val(priority);

            row.find('.info').hide();
            row.find('.edit').show();

            selectTodo(row);
        }

        function closeEdit(obj) {
            var row = $(obj).parents('.row');
            row.find('.info').show();
            row.find('.edit').hide();
        }

        function selectFolder(obj) {
            $('.editor-folder').removeClass('selected');
            obj.addClass('selected');

            var id = $(obj).attr('data-id');

            if (id == "-1") {
                $('.row').show();
            }
            else {
                $('.row').hide();
                $('.row[data-folder=' + id + ']').show();
            }
        }

        function selectProject(obj) {
            $('.editor-folder').removeClass('selected');
            obj.addClass('selected');

            var id = $(obj).attr('data-id');

            $('.row').hide();
            $('.row[data-project=' + id + ']').show();
        }

        function setDraggableAndDroppable() {
            var draggableHelper = function() {
                var div = $("<div>");

                var clone = $(this).find('.info').clone();
                clone.find('.edit-button').remove();
                clone.css('width', 'auto');

                div.html(clone);

                return div;
            };

            $('.row').draggable({
                revert: 'invalid',
                helper: draggableHelper,
                appendTo: 'body',
                containment: 'window'
            });

            $('.editor-folder.folder').droppable({
                hoverClass: "folder-hover",
                drop: function( event, ui ) {
                    var folder = $(this);
                    var page = $(ui.draggable);

                    var toSend = {
                        folderId: folder.attr('data-id'),
                        pageId: page.attr('data-id')
                    }

                    $.post("{{ path('todosMovePageToFolder') }}", toSend, function(data) {
                        page.attr('data-folder', data.folder);
                        $('.editor-folder.selected').trigger('click');
                    });
                }
            });

            $('.editor-folder.all-projects-folders').droppable({
                hoverClass: "folder-hover",
                drop: function( event, ui ) {
                    var folder = $(this);
                    var page = $(ui.draggable);

                    var toSend = {
                        folderId: -1,
                        pageId: page.attr('data-id')
                    }

                    $.post("{{ path('todosRemovePageFromFolders') }}", toSend, function(data) {
                        page.attr('data-folder', data.folder);
                        $('.editor-folder.selected').trigger('click');
                    });
                }
            });

            $('.editor-folder.project').droppable({
                hoverClass: "folder-hover",
                drop: function( event, ui ) {
                    var project = $(this);
                    var page = $(ui.draggable);

                    var toSend = {
                        projectId: project.attr('data-id'),
                        pageId: page.attr('data-id')
                    }

                    $.post("{{ path('todosMovePageToProject') }}", toSend, function(data) {
                        page.attr('data-project', data.project);
                        $('.editor-folder.selected').trigger('click');
                    });
                }
            });
        }
    </script>
{% endblock %}

{% block body %}

    <div class="content-two-thirds-columns">
        <div class="narrow-column">
            <div class="toolbar">
                <div class="toolbar-content">
                    <a href="#!" onclick="createFolder()" title="Create a new folder">+</a><a href="#!" onclick="removeFolder('{{ path('todosRemoveFolder') }}')" title="Remove selected folder">&ndash;</a>
                </div>
            </div>
            <div class="editor-folders">
                <div class="editor-folders">
                    <div class="editor-folder all-projects-folders" data-id="-1">
                        All
                    </div>
                </div>
                <div class="section-label">Projects</div>
                <div class="editor-folders projects">
                    {% for project in projects %}
                        <div class="editor-folder project" data-id="{{ project.id }}">
                            {{ project.name }}
                        </div>
                    {% endfor %}
                </div>

                <div class="section-label">Folders</div>
                <div class="editor-folders folders" data-url-create="{{ path('todosCreateFolder') }}">
                    {% for folder in folders %}
                        <div class="editor-folder folder" data-id="{{ folder.id }}">
                            {{ folder.name }}
                        </div>
                    {% endfor %}
                </div>
            </div>
        </div>
        <div class="large-column">
            <div class="toolbar">
                <div class="toolbar-content">
                    <a href="#!" onclick="createTodo()" title="Create a new to do">+</a><a href="#!" onclick="removeTodo()" title="Remove selected to do">&ndash;</a>
                </div>
            </div>
            <div class="full-size-table small-rows" id="todoTable">
                {% for todo in todos %}
                    {% set isCompletedClass = '' %}
                    {% set isCompletedCheck = '' %}

                    {% if todo.isCompleted is not empty %}
                        {% set isCompletedClass = ' is-completed' %}
                        {% set isCompletedCheck = 'checked' %}
                    {% endif %}

                    <div class="row" data-id="{{ todo.id }}" data-folder="{{ todo.folder }}" data-project="{{ todo.project }}" onclick="selectTodo(this)">
                        <div class="info">
                            <span class="edit-button"><a href="#!" onclick="openEdit(this)">Edit</a></span>
                            <span class="name">{{ todo.name }}</span>
                            <span class="gray-info">
                                <span class="priority">{{ todo.priority }}</span>
                                <span class="date-planned">{{ todo.datePlanned }}</span>
                                {% if todo.isCompleted is not empty %}
                                    <span class="date-completed">{{ todo.dateCompleted }}</span>
                                {% endif %}
                            </span>
                        </div>
                        <div class="edit">
                            <input type="text" class="text-todo-name" value="{{ todo.name }}" placeholder="To do Name">
                            <input type="text" class="text-todo-dateplanned" value="{{ todo.datePlanned }}" placeholder="Date planned">
                            Priority:
                            <select class="select-priority">
                                <option value="1">1</option>
                                <option value="2">2</option>
                                <option value="3">3</option>
                            </select>
                            <textarea class="text-todo-note" placeholder="To do Notes">{{ todo.notes }}</textarea>
                            <button onclick="saveTodo()" style="margin-left: 10px;">Save</button><button onclick="closeEdit(this)" style="margin-left: 10px;">Cancel</button>
                        </div>
                    </div>
                {% endfor %}
            </div>
        </div>
    </div>
    <div class="clear-both"></div>

{% endblock %}

{% block stylesheets %}
    <style>
        .text-bookmark-name, .text-bookmark-url {
            width: calc(50% - 30px) !important;
            float: left;
            margin-left: 10px;
        }

        .text-bookmark-note {
            width: calc(100% - 40px);
            height: 50px;
            margin-left: 10px;
            margin-top: 20px;
        }
    </style>

    {{ parent() }}
{% endblock %}
