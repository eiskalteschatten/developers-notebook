{% extends 'default/base.html.twig' %}

{% block title %}Bookmarks - Developer's Notebook{% endblock %}

{% block javascripts %}
    {{ parent() }}

    <script type="text/javascript" src="{{ asset('resources/js/folders.js') }}"></script>

    <script type="text/javascript">
        var standardArea = "{{ standardArea }}";

        $(document).ready(function() {
            $('.editor-folder').click(function() {
                $('.tab-section').hide();
                $('.editor-folder').removeClass('selected');

                var dataSection = $(this).attr('data-section');
                $('.'+dataSection).show();
                $(this).addClass('selected');
            });

            $('.all-projects-folders').trigger('click');

            var selectedItem = getUrlParameter("selectedItem");

            if (selectedItem !== undefined) {
                $('.editor-page[data-id="'+selectedItem+'"]').trigger('click');
            }
            else {
                $('.editor-page:visible:first').trigger('click');
            }
        });

        function goToContent(url, id) {
            window.location.href = url + "?selectedItem=" + id;
        }

        function createBookmark() {

        }

        function sendCreateBookmark(obj) {
            var folderId = $('.folders').find('.editor-folder.selected').attr('data-id');
            var projectId = $('.projects').find('.editor-folder.selected').attr('data-id');

            if (folderId === undefined || folderId == "") {
                folderId = -1;
            }

            if (projectId === undefined || projectId == "") {
                projectId = -1;
            }

            var toSend = {
                standardArea: standardArea,
                folder: folderId,
                project: projectId
            }

            $.post("{{ path('bookmarksCreateBookmark') }}", toSend, function(data) {
                var div = $("<div>");
                div.addClass('row');
                div.attr('data-id', data.id);
                div.attr('data-folder', data.folder);
                div.attr('data-syntax', data.syntax);
                div.attr('data-project', data.project);
                div.attr('data-year', data.year);
                div.html('<div class="preview"></div><div class="date">' + data.date + '</div><div class="content"></div>');
                $('.editor-pages').append(div);

                div.click(function() {
                    selectPage($(this));
                });

                div.trigger('click');

                setDraggableAndDroppable();
            });
        }

        function saveBookmark() {
            var selected = $('.row.selected');

            var toSend = {
                id: selected.attr('data-id'),
                syntax: selected.attr('data-syntax'),
                content: editor.getValue()
            }

            $.post(editorUrl+"save/", toSend, function(data) {
                updatePagePreview(data.previewContent);
                var content = editor.getValue();
                $('.editor-page.selected').find('.content').text(content);
            });
        }

        function removeBookmark() {
            if (confirm('Are you sure you want to remove this bookmark? This action cannot be undone.')) {
                var selected = $('.editor-page.selected');

                var toSend = {
                    id: selected.attr('data-id')
                }

                $.post(editorUrl+"remove/", toSend, function(data) {
                    var previewSibling = selected.prev();
                    selected.remove();
                    previewSibling.trigger('click');
                });
            }
        }

        function selectFolder(obj) {
            $('.editor-folder').removeClass('selected');
            obj.addClass('selected');

            var id = $(obj).attr('data-id');

            if (id == "-1") {
                $('.row').show();
            }
            else {
                $('.row').hide();
                $('.row[data-folder=' + id + ']').show();
            }

            $('.row:visible:first').trigger('click');
        }

        function selectProject(obj) {
            $('.editor-folder').removeClass('selected');
            obj.addClass('selected');

            var id = $(obj).attr('data-id');

            $('.row').hide();
            $('.row[data-project=' + id + ']').show();

            $('.row:visible:first').trigger('click');
        }

        function setDraggableAndDroppable() {
            $('.row').draggable({
                revert: 'invalid',
                helper: "clone",
                appendTo: 'body',
                containment: 'window'
            });

            $('.editor-folder.folder').droppable({
                hoverClass: "folder-hover",
                drop: function( event, ui ) {
                    var folder = $(this);
                    var page = $(ui.draggable);

                    var toSend = {
                        folderId: folder.attr('data-id'),
                        pageId: page.attr('data-id')
                    }

                    $.post(editorUrl+"movePageToFolder/", toSend, function(data) {
                        page.attr('data-folder', data.folder);
                        $('.editor-folder.selected').trigger('click');
                    });
                }
            });

            $('.editor-folder.all-projects-folders').droppable({
                hoverClass: "folder-hover",
                drop: function( event, ui ) {
                    var folder = $(this);
                    var page = $(ui.draggable);

                    var toSend = {
                        folderId: -1,
                        pageId: page.attr('data-id')
                    }

                    $.post(editorUrl+"removePageFromFolders/", toSend, function(data) {
                        page.attr('data-folder', data.folder);
                        $('.editor-folder.selected').trigger('click');
                    });
                }
            });

            $('.editor-folder.project').droppable({
                hoverClass: "folder-hover",
                drop: function( event, ui ) {
                    var project = $(this);
                    var page = $(ui.draggable);

                    var toSend = {
                        projectId: project.attr('data-id'),
                        pageId: page.attr('data-id')
                    }

                    $.post(editorUrl+"movePageToProject/", toSend, function(data) {
                        page.attr('data-project', data.project);
                        $('.editor-folder.selected').trigger('click');
                    });
                }
            });
        }
    </script>
{% endblock %}

{% block body %}

    <div class="content-two-thirds-columns">
        <div class="narrow-column">
            <div class="toolbar">
                <div class="toolbar-content">
                    <a href="#!" onclick="createFolder()" title="Create a new folder">+</a><a href="#!" onclick="removeFolder('{{ path('bookmarksRemoveFolder') }}')" title="Remove selected folder">&ndash;</a>
                </div>
            </div>
            <div class="editor-folders">
                <div class="editor-folders">
                    <div class="editor-folder all-projects-folders" data-id="-1">
                        All
                    </div>
                </div>
                <div class="section-label">Projects</div>
                <div class="editor-folders projects">
                    {% for project in projects %}
                        <div class="editor-folder project" data-id="{{ project.id }}">
                            {{ project.name }}
                        </div>
                    {% endfor %}
                </div>

                <div class="section-label">Folders</div>
                <div class="editor-folders folders" data-url-create="{{ path('bookmarksCreateFolder') }}">
                    {% for folder in folders %}
                        <div class="editor-folder folder" data-id="{{ folder.id }}">
                            {{ folder.name }}
                        </div>
                    {% endfor %}
                </div>
            </div>
        </div>
        <div class="large-column">
            <div class="toolbar">
                <div class="toolbar-content">
                    <a href="#!" onclick="createBookmark()" title="Create a new bookmark">+</a><a href="#!" onclick="removeBookmark()" title="Remove selected bookmark">&ndash;</a>
                </div>
            </div>
            <div class="full-size-table small-rows">
                {% for bookmark in bookmarks %}
                    <div class="row" data-id="{{ bookmark.id }}" data-folder="{{ bookmark.folder }}" data-project="{{ bookmark.project }}">
                        <span class="name">{{ bookmark.name }}</span>
                        <span class="url">{{ bookmark.url }}</span>
                    </div>
                {% endfor %}
            </div>
        </div>
    </div>
    <div class="clear-both"></div>

{% endblock %}

{% block stylesheets %}
    {{ parent() }}
{% endblock %}
